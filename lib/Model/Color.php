<?php
/**
 * Color
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  Aternos\HangarApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Hangar API
 *
 * This page describes the format for the current Hangar REST API as well as general usage guidelines.<br> Note that all routes **not** listed here should be considered **internal**, and can change at a moment's notice. **Do not use them**.  ## Authentication and Authorization There are two ways to consume the API: Authenticated or anonymous.  ### Anonymous When using anonymous authentication, you only have access to public information, but you don't need to worry about creating and storing an API key or handing JWTs.  ### Authenticated If you need access to non-public content or actions, you need to create and use API keys. These can be created by going to the API keys page via the profile dropdown or by going to your user page and clicking on the key icon.  API keys allow you to impersonate yourself, so they should be handled like passwords. **Do not share them with anyone else!**  #### Getting and Using a JWT Once you have an API key, you need to authenticate yourself: Send a `POST` request with your API key identifier to `/api/v1/authenticate?apiKey=yourKey`. The response will contain your JWT as well as an expiration time. Put this JWT into the `Authorization` header of every request and make sure to request a new JWT after the expiration time has passed.  Please also set a meaningful `User-Agent` header. This allows us to better identify loads and needs for potentially new endpoints.  ## Misc ### Date Formats Standard ISO types. Where possible, we use the [OpenAPI format modifier](https://swagger.io/docs/specification/data-models/data-types/#format).  ### Rate Limits and Caching The default rate limit is set at 20 requests every 5 seconds with an initial overdraft for extra leniency. Individual endpoints, such as version creation, may have stricter rate limiting.  If applicable, always cache responses. The Hangar API itself is cached by CloudFlare and internally.
 *
 * The version of the OpenAPI document: 1.0
 * Generated by: https://openapi-generator.tech
 * Generator version: 7.8.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Aternos\HangarApi\Model;
use \Aternos\HangarApi\ObjectSerializer;

/**
 * Color Class Doc Comment
 *
 * @category Class
 * @package  Aternos\HangarApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class Color
{
    /**
     * Possible values of this enum
     */
    public const B400_FF = '#B400FF';

    public const C87_DFF = '#C87DFF';

    public const E100_E1 = '#E100E1';

    public const _0000_FF = '#0000FF';

    public const B9_F2_FF = '#B9F2FF';

    public const E7_FEFF = '#E7FEFF';

    public const _0096_FF = '#0096FF';

    public const _00_E1_E1 = '#00E1E1';

    public const _00_DC00 = '#00DC00';

    public const _009600 = '#009600';

    public const _7_FFF00 = '#7FFF00';

    public const FFC800 = '#FFC800';

    public const CFB53_B = '#CFB53B';

    public const FF8200 = '#FF8200';

    public const DC0000 = '#DC0000';

    public const C0_C0_C0 = '#C0C0C0';

    public const A9_A9_A9 = '#A9A9A9';

    public const TRANSPARENT = 'transparent';

    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::B400_FF,
            self::C87_DFF,
            self::E100_E1,
            self::_0000_FF,
            self::B9_F2_FF,
            self::E7_FEFF,
            self::_0096_FF,
            self::_00_E1_E1,
            self::_00_DC00,
            self::_009600,
            self::_7_FFF00,
            self::FFC800,
            self::CFB53_B,
            self::FF8200,
            self::DC0000,
            self::C0_C0_C0,
            self::A9_A9_A9,
            self::TRANSPARENT
        ];
    }
}


